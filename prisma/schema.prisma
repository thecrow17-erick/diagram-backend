// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id          String @db.Uuid @unique @id @default(uuid())
  username    String @db.VarChar(40) 
  email       String @db.VarChar(50)
  password    String @db.Text 

  rooms       User_Room[]

  createdAt   DateTime @db.Timestamp() @default(now()) 
  updatedAt   DateTime @db.Timestamp() @default(now()) @updatedAt
}

model User_Room{
  user_id        String @db.Uuid 
  user           User   @relation(references: [id], fields: [user_id])
  
  role           Role
  
  room_id        Int    @db.Integer
  room           Room   @relation(references: [id], fields: [room_id])


  status         STATUS @default(OFICIAL)
  createdAt      DateTime @db.Timestamp() @default(now()) 

  @@id([user_id,room_id])
}

enum Role{
  OWNER
  COLABORATOR
  MEMBER
}

enum STATUS {
  INVITATION
  OFICIAL
  REFUSED
  REMOVED
}

model Room{
  id            Int @db.Integer @default(autoincrement()) @id
  code          String @db.VarChar(8) @unique
  name          String @db.VarChar(50)
  description   String @db.Text

  status        Boolean @default(true)

  users         User_Room[]
  data          Json

  createdAt     DateTime @db.Timestamp() @default(now()) 
  updatedAt     DateTime @db.Timestamp() @default(now()) @updatedAt
}

